using System;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Security.Cryptography;

namespace TCP_Server
{
    class Program
    {
        static void Main()
        {
            TcpListener server = null;
            string password = "meinPasswort";
            string hashedPassword = HashPassword(password);

            try
            {
                IPAddress localAddr = IPAddress.Parse("127.0.0.1");
                int port = 8080;
                server = new TcpListener(localAddr, port);
                server.Start();

                Console.WriteLine($"Server gestartet auf {localAddr}:{port}");

                while (true)
                {
                    TcpClient client = server.AcceptTcpClient();
                    Console.WriteLine("Verbunden mit einem Client");

                    NetworkStream stream = client.GetStream();

                    byte[] buffer = new byte[256];
                    int bytesRead = stream.Read(buffer, 0, buffer.Length);
                    string receivedHashedPassword = Encoding.ASCII.GetString(buffer, 0, bytesRead);

                    if (receivedHashedPassword == hashedPassword)
                    {
                        Console.WriteLine("Passwort korrekt!");
                        byte[] successMessage = Encoding.ASCII.GetBytes("Erfolgreich authentifiziert!");
                        stream.Write(successMessage, 0, successMessage.Length);
                    }
                    else
                    {
                        Console.WriteLine("Falsches Passwort!");
                        byte[] failureMessage = Encoding.ASCII.GetBytes("Falsches Passwort!");
                        stream.Write(failureMessage, 0, failureMessage.Length);
                    }

                    client.Close();
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            finally
            {
                server.Stop();
            }
        }

        static string HashPassword(string password)
        {
            using (SHA256 sha256Hash = SHA256.Create())
            {
                byte[] bytes = sha256Hash.ComputeHash(Encoding.UTF8.GetBytes(password));

                StringBuilder builder = new StringBuilder();
                for (int i = 0; i < bytes.Length; i++)
                {
                    builder.Append(bytes[i].ToString("x2"));
                }
                return builder.ToString();
            }
        }
    }
}
